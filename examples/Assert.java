package org.interfaceit.util.mixin;

import java.lang.Object; 
import java.lang.String; 
import org.hamcrest.Matcher; 
import org.junit.internal.ArrayComparisonFailure; 

/** 
 * Wrapper of static elements in org.junit.Assert
 * Generated by Interface-It: https://github.com/aro-tech/interface-it
 * {@link org.junit.Assert}
 */
public interface Assert {


    // CONSTANTS: 


    // DELEGATE METHODS: 

    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(boolean[],boolean[])
     * {@link org.junit.Assert#assertArrayEquals(boolean[],boolean[])}
     */
    default void assertArrayEquals(boolean[] arg0, boolean[] arg1) {
        org.junit.Assert.assertArrayEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(byte[],byte[])
     * {@link org.junit.Assert#assertArrayEquals(byte[],byte[])}
     */
    default void assertArrayEquals(byte[] arg0, byte[] arg1) {
        org.junit.Assert.assertArrayEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(char[],char[])
     * {@link org.junit.Assert#assertArrayEquals(char[],char[])}
     */
    default void assertArrayEquals(char[] arg0, char[] arg1) {
        org.junit.Assert.assertArrayEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(int[],int[])
     * {@link org.junit.Assert#assertArrayEquals(int[],int[])}
     */
    default void assertArrayEquals(int[] arg0, int[] arg1) {
        org.junit.Assert.assertArrayEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(long[],long[])
     * {@link org.junit.Assert#assertArrayEquals(long[],long[])}
     */
    default void assertArrayEquals(long[] arg0, long[] arg1) {
        org.junit.Assert.assertArrayEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.Object[],java.lang.Object[])
     * {@link org.junit.Assert#assertArrayEquals(java.lang.Object[],java.lang.Object[])}
     */
    default void assertArrayEquals(Object[] arg0, Object[] arg1) {
        org.junit.Assert.assertArrayEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(short[],short[])
     * {@link org.junit.Assert#assertArrayEquals(short[],short[])}
     */
    default void assertArrayEquals(short[] arg0, short[] arg1) {
        org.junit.Assert.assertArrayEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(double[],double[],double)
     * {@link org.junit.Assert#assertArrayEquals(double[],double[],double)}
     */
    default void assertArrayEquals(double[] arg0, double[] arg1, double arg2) {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(float[],float[],float)
     * {@link org.junit.Assert#assertArrayEquals(float[],float[],float)}
     */
    default void assertArrayEquals(float[] arg0, float[] arg1, float arg2) {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,boolean[],boolean[]) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,boolean[],boolean[])}
     */
    default void assertArrayEquals(String arg0, boolean[] arg1, boolean[] arg2) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,byte[],byte[]) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,byte[],byte[])}
     */
    default void assertArrayEquals(String arg0, byte[] arg1, byte[] arg2) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,char[],char[]) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,char[],char[])}
     */
    default void assertArrayEquals(String arg0, char[] arg1, char[] arg2) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,int[],int[]) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,int[],int[])}
     */
    default void assertArrayEquals(String arg0, int[] arg1, int[] arg2) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,long[],long[]) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,long[],long[])}
     */
    default void assertArrayEquals(String arg0, long[] arg1, long[] arg2) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,java.lang.Object[],java.lang.Object[]) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,java.lang.Object[],java.lang.Object[])}
     */
    default void assertArrayEquals(String arg0, Object[] arg1, Object[] arg2) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,short[],short[]) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,short[],short[])}
     */
    default void assertArrayEquals(String arg0, short[] arg1, short[] arg2) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,double[],double[],double) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,double[],double[],double)}
     */
    default void assertArrayEquals(String arg0, double[] arg1, double[] arg2, double arg3) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2, arg3);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertArrayEquals(java.lang.String,float[],float[],float) throws org.junit.internal.ArrayComparisonFailure
     * {@link org.junit.Assert#assertArrayEquals(java.lang.String,float[],float[],float)}
     */
    default void assertArrayEquals(String arg0, float[] arg1, float[] arg2, float arg3) throws ArrayComparisonFailure {
        org.junit.Assert.assertArrayEquals(arg0, arg1, arg2, arg3);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(double,double)
     * {@link org.junit.Assert#assertEquals(double,double)}
     */
    default void assertEquals(double arg0, double arg1) {
        org.junit.Assert.assertEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(long,long)
     * {@link org.junit.Assert#assertEquals(long,long)}
     */
    default void assertEquals(long arg0, long arg1) {
        org.junit.Assert.assertEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)
     * {@link org.junit.Assert#assertEquals(java.lang.Object,java.lang.Object)}
     */
    default void assertEquals(Object arg0, Object arg1) {
        org.junit.Assert.assertEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(java.lang.Object[],java.lang.Object[])
     * {@link org.junit.Assert#assertEquals(java.lang.Object[],java.lang.Object[])}
     */
    default void assertEquals(Object[] arg0, Object[] arg1) {
        org.junit.Assert.assertEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(double,double,double)
     * {@link org.junit.Assert#assertEquals(double,double,double)}
     */
    default void assertEquals(double arg0, double arg1, double arg2) {
        org.junit.Assert.assertEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(float,float,float)
     * {@link org.junit.Assert#assertEquals(float,float,float)}
     */
    default void assertEquals(float arg0, float arg1, float arg2) {
        org.junit.Assert.assertEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(java.lang.String,double,double)
     * {@link org.junit.Assert#assertEquals(java.lang.String,double,double)}
     */
    default void assertEquals(String arg0, double arg1, double arg2) {
        org.junit.Assert.assertEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(java.lang.String,long,long)
     * {@link org.junit.Assert#assertEquals(java.lang.String,long,long)}
     */
    default void assertEquals(String arg0, long arg1, long arg2) {
        org.junit.Assert.assertEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(java.lang.String,java.lang.Object,java.lang.Object)
     * {@link org.junit.Assert#assertEquals(java.lang.String,java.lang.Object,java.lang.Object)}
     */
    default void assertEquals(String arg0, Object arg1, Object arg2) {
        org.junit.Assert.assertEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(java.lang.String,java.lang.Object[],java.lang.Object[])
     * {@link org.junit.Assert#assertEquals(java.lang.String,java.lang.Object[],java.lang.Object[])}
     */
    default void assertEquals(String arg0, Object[] arg1, Object[] arg2) {
        org.junit.Assert.assertEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(java.lang.String,double,double,double)
     * {@link org.junit.Assert#assertEquals(java.lang.String,double,double,double)}
     */
    default void assertEquals(String arg0, double arg1, double arg2, double arg3) {
        org.junit.Assert.assertEquals(arg0, arg1, arg2, arg3);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertEquals(java.lang.String,float,float,float)
     * {@link org.junit.Assert#assertEquals(java.lang.String,float,float,float)}
     */
    default void assertEquals(String arg0, float arg1, float arg2, float arg3) {
        org.junit.Assert.assertEquals(arg0, arg1, arg2, arg3);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertFalse(boolean)
     * {@link org.junit.Assert#assertFalse(boolean)}
     */
    default void assertFalse(boolean arg0) {
        org.junit.Assert.assertFalse(arg0);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertFalse(java.lang.String,boolean)
     * {@link org.junit.Assert#assertFalse(java.lang.String,boolean)}
     */
    default void assertFalse(String arg0, boolean arg1) {
        org.junit.Assert.assertFalse(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotEquals(long,long)
     * {@link org.junit.Assert#assertNotEquals(long,long)}
     */
    default void assertNotEquals(long arg0, long arg1) {
        org.junit.Assert.assertNotEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotEquals(java.lang.Object,java.lang.Object)
     * {@link org.junit.Assert#assertNotEquals(java.lang.Object,java.lang.Object)}
     */
    default void assertNotEquals(Object arg0, Object arg1) {
        org.junit.Assert.assertNotEquals(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotEquals(double,double,double)
     * {@link org.junit.Assert#assertNotEquals(double,double,double)}
     */
    default void assertNotEquals(double arg0, double arg1, double arg2) {
        org.junit.Assert.assertNotEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotEquals(float,float,float)
     * {@link org.junit.Assert#assertNotEquals(float,float,float)}
     */
    default void assertNotEquals(float arg0, float arg1, float arg2) {
        org.junit.Assert.assertNotEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotEquals(java.lang.String,long,long)
     * {@link org.junit.Assert#assertNotEquals(java.lang.String,long,long)}
     */
    default void assertNotEquals(String arg0, long arg1, long arg2) {
        org.junit.Assert.assertNotEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotEquals(java.lang.String,java.lang.Object,java.lang.Object)
     * {@link org.junit.Assert#assertNotEquals(java.lang.String,java.lang.Object,java.lang.Object)}
     */
    default void assertNotEquals(String arg0, Object arg1, Object arg2) {
        org.junit.Assert.assertNotEquals(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotEquals(java.lang.String,double,double,double)
     * {@link org.junit.Assert#assertNotEquals(java.lang.String,double,double,double)}
     */
    default void assertNotEquals(String arg0, double arg1, double arg2, double arg3) {
        org.junit.Assert.assertNotEquals(arg0, arg1, arg2, arg3);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotEquals(java.lang.String,float,float,float)
     * {@link org.junit.Assert#assertNotEquals(java.lang.String,float,float,float)}
     */
    default void assertNotEquals(String arg0, float arg1, float arg2, float arg3) {
        org.junit.Assert.assertNotEquals(arg0, arg1, arg2, arg3);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotNull(java.lang.Object)
     * {@link org.junit.Assert#assertNotNull(java.lang.Object)}
     */
    default void assertNotNull(Object arg0) {
        org.junit.Assert.assertNotNull(arg0);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotNull(java.lang.String,java.lang.Object)
     * {@link org.junit.Assert#assertNotNull(java.lang.String,java.lang.Object)}
     */
    default void assertNotNull(String arg0, Object arg1) {
        org.junit.Assert.assertNotNull(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotSame(java.lang.Object,java.lang.Object)
     * {@link org.junit.Assert#assertNotSame(java.lang.Object,java.lang.Object)}
     */
    default void assertNotSame(Object arg0, Object arg1) {
        org.junit.Assert.assertNotSame(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)
     * {@link org.junit.Assert#assertNotSame(java.lang.String,java.lang.Object,java.lang.Object)}
     */
    default void assertNotSame(String arg0, Object arg1, Object arg2) {
        org.junit.Assert.assertNotSame(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNull(java.lang.Object)
     * {@link org.junit.Assert#assertNull(java.lang.Object)}
     */
    default void assertNull(Object arg0) {
        org.junit.Assert.assertNull(arg0);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertNull(java.lang.String,java.lang.Object)
     * {@link org.junit.Assert#assertNull(java.lang.String,java.lang.Object)}
     */
    default void assertNull(String arg0, Object arg1) {
        org.junit.Assert.assertNull(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertSame(java.lang.Object,java.lang.Object)
     * {@link org.junit.Assert#assertSame(java.lang.Object,java.lang.Object)}
     */
    default void assertSame(Object arg0, Object arg1) {
        org.junit.Assert.assertSame(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertSame(java.lang.String,java.lang.Object,java.lang.Object)
     * {@link org.junit.Assert#assertSame(java.lang.String,java.lang.Object,java.lang.Object)}
     */
    default void assertSame(String arg0, Object arg1, Object arg2) {
        org.junit.Assert.assertSame(arg0, arg1, arg2);
    }



    /**
     * Delegate call to public static <T> void org.junit.Assert.assertThat(T,org.hamcrest.Matcher<? super T>)
     * {@link org.junit.Assert#assertThat(java.lang.Object,org.hamcrest.Matcher)}
     */
    default <T> void assertThat(T assertion, Matcher<? super T> arg1) {
        org.junit.Assert.assertThat(assertion, arg1);
    }



    /**
     * Delegate call to public static <T> void org.junit.Assert.assertThat(java.lang.String,T,org.hamcrest.Matcher<? super T>)
     * {@link org.junit.Assert#assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)}
     */
    default <T> void assertThat(String actual, T arg1, Matcher<? super T> arg2) {
        org.junit.Assert.assertThat(actual, arg1, arg2);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertTrue(boolean)
     * {@link org.junit.Assert#assertTrue(boolean)}
     */
    default void assertTrue(boolean arg0) {
        org.junit.Assert.assertTrue(arg0);
    }



    /**
     * Delegate call to public static void org.junit.Assert.assertTrue(java.lang.String,boolean)
     * {@link org.junit.Assert#assertTrue(java.lang.String,boolean)}
     */
    default void assertTrue(String arg0, boolean arg1) {
        org.junit.Assert.assertTrue(arg0, arg1);
    }



    /**
     * Delegate call to public static void org.junit.Assert.fail()
     * {@link org.junit.Assert#fail()}
     */
    default void fail() {
        org.junit.Assert.fail();
    }



    /**
     * Delegate call to public static void org.junit.Assert.fail(java.lang.String)
     * {@link org.junit.Assert#fail(java.lang.String)}
     */
    default void fail(String failureMessage) {
        org.junit.Assert.fail(failureMessage);
    }



}